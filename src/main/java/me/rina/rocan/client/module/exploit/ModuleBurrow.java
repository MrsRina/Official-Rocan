package me.rina.rocan.client.module.exploit;

import me.rina.rocan.api.module.impl.ModuleCategory;
import me.rina.rocan.api.module.registry.Registry;
import me.rina.rocan.api.module.Module;
import me.rina.rocan.api.setting.value.ValueBoolean;
import me.rina.rocan.api.setting.value.ValueEnum;
import me.rina.rocan.api.setting.value.ValueNumber;
import me.rina.rocan.api.util.client.NullUtil;
import me.rina.rocan.client.event.client.ClientTickEvent;
import net.minecraft.block.state.IBlockState;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.network.play.client.CPacketAnimation;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import team.stiff.pomelo.impl.annotated.handler.annotation.Listener;

/**
 * @author SrRina
 * @since 09/04/2021 at 00:10
 **/
@Registry(name = "Burrow", tag = "Burrow", description = "Places block on you!", category = ModuleCategory.EXPLOIT)
public class ModuleBurrow extends Module {
    /* Misc. */
    public static ValueNumber settingTries = new ValueNumber("Tries", "Tries", "Tries to place block!", 3, 1, 6);
    public static ValueBoolean settingOnGround = new ValueBoolean("On Ground", "OnGround", "Dev setting!", true);
    public static ValueEnum settingSwing = new ValueEnum("Swing", "InstantBurrowSwing", "Swing hand!", Swing.RENDER);

    public enum Swing {
        RENDER, SERVER, NONE
    }

    private boolean isSaved;

    private double saveX;
    private double saveY;
    private double saveZ;

    @Override
    public void onEnable() {
        if (NullUtil.isPlayerWorld()) {
            return;
        }

        this.saveX = mc.player.posX;
        this.saveY = mc.player.posY;
        this.saveZ = mc.player.posZ;

        this.isSaved = true;
    }

    @Listener
    public void onClientTick(ClientTickEvent event) {
        if (NullUtil.isPlayerWorld()) {
            setDisabled();

            return;
        }

        if (this.isSaved && mc.player.getHeldItemMainhand().getItem() == Item.getItemFromBlock(Blocks.OBSIDIAN)) {
            for (int i = 0; i < settingTries.getValue().intValue(); i++) {
                final BlockPos self = new BlockPos(Math.floor(this.saveX), Math.floor(this.saveY), Math.floor(this.saveZ));
                final EnumFacing facing = EnumFacing.getDirectionFromEntityLiving(self, mc.player);

                if (settingSwing.getValue() != Swing.NONE) {
                    if (settingSwing.getValue() == Swing.SERVER) {
                        mc.player.connection.sendPacket(new CPacketAnimation(EnumHand.MAIN_HAND));
                    } else {
                        mc.player.swingArm(EnumHand.MAIN_HAND);
                    }
                }

                mc.player.noClip = true;
                mc.player.setPosition(this.saveX, this.saveY + 0.5, this.saveZ);
                mc.player.connection.sendPacket(new CPacketPlayerTryUseItemOnBlock(self, facing, EnumHand.MAIN_HAND, 0.5f, 0.5f, 0.5f));
            }

            mc.player.setPosition(this.saveX, this.saveY, this.saveZ);
            mc.player.noClip = false;

            this.isSaved = false;
            setDisabled();
        }
    }
}