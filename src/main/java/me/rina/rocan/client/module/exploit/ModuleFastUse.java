package me.rina.rocan.client.module.exploit;

import com.google.common.eventbus.Subscribe;
import me.rina.rocan.api.module.Module;
import me.rina.rocan.api.module.impl.ModuleCategory;
import me.rina.rocan.api.setting.value.ValueBoolean;
import me.rina.rocan.client.event.client.ClientTickEvent;
import me.rina.rocan.client.event.network.ReceiveEventPacket;
import me.rina.rocan.client.event.network.SendEventPacket;
import me.rina.rocan.mixin.interfaces.IMinecraft;
import net.minecraft.init.Items;
import net.minecraft.item.*;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.math.BlockPos;
import team.stiff.pomelo.impl.annotated.handler.annotation.Listener;

import static me.rina.rocan.Rocan.MC;

public class ModuleFastUse extends Module {

  public static ValueBoolean exp = new ValueBoolean("Exp", "exp", "Makes xp go brrrr", true);
  public static ValueBoolean place = new ValueBoolean("Block", "block", "Makes xp go brrrr", false);
  public static ValueBoolean crystal = new ValueBoolean("Crystals", "crystals", "Makes xp go brrrr", true);
  public static ValueBoolean bow = new ValueBoolean("Bow", "bow", "Makes xp go brrrr", true);
  public static ValueBoolean pearl = new ValueBoolean("Pearl", "pearl", "Makes xp go brrrr", true);
  public static ValueBoolean snowball = new ValueBoolean("Snowballs", "snowballs", "Makes xp go brrrr", true);
  public static ValueBoolean all = new ValueBoolean("All", "all", "Makes xp go brrrr", false);

  public ModuleFastUse() {
    super("Fast Use", "FastUse", "stuff goes brrrrr", ModuleCategory.Exploit);
  }

  @Subscribe
  @Listener
  public void onPacketSend(SendEventPacket event) {
    if (exp.getValue()) {
      if (MC.player != null && (MC.player.getHeldItemMainhand().getItem() == Items.EXPERIENCE_BOTTLE || MC.player.getHeldItemOffhand().getItem() == Items.EXPERIENCE_BOTTLE)) {
        new Thread(() -> imc.setRightClickDelayTimer(0)).start();
      }
    }
    if (bow.getValue())
      if (MC.player != null && (mc.player.inventory.getCurrentItem().getItem() instanceof ItemBow && mc.player.isHandActive() && mc.player.getItemInUseMaxCount() >= 3)) {
        new Thread(() -> {
          mc.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.RELEASE_USE_ITEM, BlockPos.ORIGIN, mc.player.getHorizontalFacing()));
          mc.player.connection.sendPacket(new CPacketPlayerTryUseItem(mc.player.getActiveHand()));
          mc.player.stopActiveHand();
        }).start();
      }
    if (place.getValue()) {
      if (MC.player != null && (MC.player.getHeldItemMainhand().getItem() instanceof ItemBlock || MC.player.getHeldItemOffhand().getItem() instanceof ItemBlock)) {
        new Thread(() -> imc.setRightClickDelayTimer(0)).start();
      }
    }
    if (crystal.getValue()) {
      if (MC.player != null && (MC.player.getHeldItemMainhand().getItem() instanceof ItemEndCrystal || MC.player.getHeldItemOffhand().getItem() instanceof ItemEndCrystal)) {
        new Thread(() -> imc.setRightClickDelayTimer(0)).start();
      }
    }
    if (pearl.getValue()) {
      if (MC.player != null && (MC.player.getHeldItemMainhand().getItem() instanceof ItemEnderPearl || MC.player.getHeldItemOffhand().getItem() instanceof ItemEnderPearl)) {
        new Thread(() -> imc.setRightClickDelayTimer(0)).start();
      }
    }
    if (snowball.getValue()) {
      if (MC.player != null && (MC.player.getHeldItemMainhand().getItem() instanceof ItemSnowball || MC.player.getHeldItemOffhand().getItem() instanceof ItemSnowball)) {
        new Thread(() -> imc.setRightClickDelayTimer(0)).start();
      }
    }
    if (all.getValue()) {
      if (MC.player != null) {
        MC.player.getHeldItemMainhand().getItem();
        {
          new Thread(() -> imc.setRightClickDelayTimer(0)).start();
        }
        MC.player.getHeldItemOffhand().getItem();
        {
          new Thread(() -> imc.setRightClickDelayTimer(0)).start();
        }
      }
    }
  }
}