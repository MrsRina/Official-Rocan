buildscript {
	repositories {
		jcenter()

		maven {
			name = "SpongePowered"
			url = "https://repo.spongepowered.org/repository/maven-public/"
		}

		maven {
			url = "http://files.minecraftforge.net/maven"
		}
	}

	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
		classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
		classpath "org.spongepowered:mixingradle:0.4-SNAPSHOT"
	}
}

apply plugin: "net.minecraftforge.gradle.forge";
apply plugin: "com.github.johnrengelman.shadow";
apply plugin: "org.spongepowered.mixin"

version project.clientVersion
group project.clientGroup

archivesBaseName = "Rocan"

minecraft {
	version = "1.12.2-14.23.0.2531"
	runDir = "run"
	coreMod = "me.rina.rocan.mixin.loader.MixinLoader"
	mappings = "snapshot_20180814"
	makeObfSourceJar = true
}

repositories {
	maven {
		name = "spongepowered-repo"
		url  = "https://repo.spongepowered.org/repository/maven-public/"
	}

	maven {
		name = "swt-repo"
		url  = "http://maven-eclipse.github.io/maven"
	}

	maven {
		name = "jitpack.io"
		url  = "https://jitpack.io"
	}

	mavenCentral()
}

dependencies {
	implementation "org.jetbrains:annotations:20.1.0"

    compile "club.minnced:java-discord-rpc:v2.0.1"
	compile group : "net.jodah", name : "typetools", version: "0.5.0"
	compile 'se.michaelthelin.spotify:spotify-web-api-java:6.5.1'
	compile 'com.google.code.gson:gson:2.8.1'

	compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
		exclude module: "launchwrapper"
		exclude module: "commons-io"
		exclude module: "guava"
	}
}

shadowJar {
	dependencies {
		include(dependency("club.minnced:java-discord-rpc"))
		include(dependency("org.javassist:javassist"))
		include(dependency("org.spongepowered:mixin"))
		include(dependency("net.jodah:typetools"))
		include(dependency("com.google.code.gson:gson"))
		include(dependency('se.michaelthelin.spotify:spotify-web-api-java:6.5.1'))
	}
}

mixin {
	defaultObfuscationEnv searge
	add sourceSets.main, "mixins.rocan.refmap.json"
}

reobf {
	shadowJar {
		mappingType = 'SEARGE'
		classpath = sourceSets.main.compileClasspath
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from (sourceSets.main.resources.srcDirs) {
		include "mcmod.info"

		expand "version" : project.version, "mcversion" : project.minecraft.version
	}

	from (sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}

	rename "(.+_at.cfg)", 'META-INF/$1';
}

jar {
	manifest {
		attributes (
			"FMLCorePluginContainsFMLMod" : "true",
			"ForceLoadAsMod"              : "true",
			"FMLCorePlugin"               : "me.rina.rocan.mixin.loader.MixinLoader",
			"MixinConfigs"                : "mixins.rocan.json",
			"tweakClass"                  : "org.spongepowered.asm.launch.MixinTweaker",
			"TweakOrder"                  : 0,
			"FMLAT"                       : "rocan_at.cfg"
		)
	}
}

build.dependsOn(shadowJar)